import org.gradle.api.initialization.resolve.RepositoriesMode

pluginManagement {
  repositories {
    mavenCentral()
    mavenLocal()
    gradlePluginPortal()

    maven {
      name = "FabricMC"
      url = "https://maven.fabricmc.net/"
    }

    maven {
      name = "nms-repo"
      url = "https://repo.codemc.org/repository/nms/"
    }

    maven {
      name = "minecraft-repo"
      url = "https://libraries.minecraft.net/"
    }

    maven {
      name = "spigotmc-repo"
      url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }

    maven {
      name = "sk89q-repo"
      url = "https://maven.enginehub.org/repo/"
    }

    maven {
      name = "placeholderapi"
      url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }

    maven {
      name = "Lumine"
      url = "https://mvn.lumine.io/repository/maven-public/"
    }

    maven {
      name = "MVdW-public"
      url = "https://repo.mvdw-software.be/content/groups/public/"
    }

    maven {
      name = "jitpack.io"
      url = "https://jitpack.io/"
    }

    maven {
      name = "Scarsz-Nexus"
      url = "https://nexus.scarsz.me/content/groups/public/"
    }

    maven {
      name = ("dynmap")
      url = ("https://repo.mikeprimm.com/")
    }

    maven {
      name = ("sonatype")
      url = ("https://oss.sonatype.org/content/groups/public/")
    }
    maven {
      name = ("essentials")
      url = ("https://repo.essentialsx.net/releases/")
    }
    maven { url = "https://repo.rosewooddev.io/repository/public/" }
    maven { url = "https://repo.auxilor.io/repository/maven-public/" }
    maven { url = "https://repo.papermc.io/repository/maven-public/" }
    maven {
      url = ("https://jitpack.io")
      content {
        includeGroupByRegex("com\\.github\\..*")
      }
    }

    maven { url = "https://repo.auxilor.io/repository/maven-public/" }
    maven { url = "https://repo.papermc.io/repository/maven-public/" }

    maven {
      name = "ossrh"
      url = "https://oss.sonatype.org/content/repositories/snapshots"
    }

    maven {
      name = "ossrh"
      url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
    }

    maven {
      name = "papermc-repo"
      url = "https://repo.papermc.io/repository/maven-public/"
    }

    maven {
      name = "sonatype"
      url = "https://oss.sonatype.org/content/groups/public/"
    }
  }
}

dependencyResolutionManagement {
  repositoriesMode = RepositoriesMode.PREFER_PROJECT
}

rootProject.name = "Aurika"

include(
    ":ecliptor",
    ":ecliptor:annotations",
    ":ecliptor:data-api",
    ":ecliptor:data-storage",
    )

include(
    ":dyanasis",
    ":dyanasis:dyanasis-api",
    ":dyanasis:dyanasis-editor-api",
    ":dyanasis:dyanasis-editor-app",
    ":dyanasis:dyanasis-editor-intellij",
    )

include(
    ":aurika:base",
    ":aurika:config-api"
)

include(
    ":Auspice",

    ":Auspice:auspice-api",
    ":Auspice:auspice-api:platform",
    ":Auspice:auspice-api:platform:geyser",


    ":Auspice:game",
    ":Auspice:game-api",

    ":Auspice:game:bukkit-api",

    ":Auspice:game:bukkit:craftbukkit",
    ":Auspice:game:bukkit:spigot",
    ":Auspice:game:bukkit:paper",
    ":Auspice:game:bukkit:purpur",
    ":Auspice:game:bukkit:leaf",
    ":Auspice:game:bukkit:folia",


//        ":Auspice:game:fabric",
//        ":Auspice:game:forge",
    ":Auspice:game:sponge",


    ":Auspice:proxy",
    ":Auspice:proxy-api",

    ":Auspice:proxy:bungee",
    ":Auspice:proxy:velocity",

    // services
    ":Auspice:service-api",
    ":Auspice:service-api:bukkit-api",
    ":Auspice:service-api:bungee-api",
    ":Auspice:service-api:velocity-api",
    ":Auspice:service",
    ":Auspice:service:AttributePlus",
    ":Auspice:service:AuthMe",
    ":Auspice:service:CMI",
    ":Auspice:service:Essentials",
    ":Auspice:service:ItemsAdder",
    ":Auspice:service:Kingdoms",
    ":Auspice:service:LuckPerms-api",
    ":Auspice:service:LuckPerms",
    ":Auspice:service:LuckPerms:bukkit",
    ":Auspice:service:LuckPerms:bungee",
    ":Auspice:service:LuckPerms:velocity",
    ":Auspice:service:MVdWPlaceholderAPI",
    ":Auspice:service:MyPet",
    ":Auspice:service:MythicMobs-v4",
    ":Auspice:service:MythicMobs-v5",
    ":Auspice:service:Oraxen",
    ":Auspice:service:PlaceholderAPI",
    ":Auspice:service:ProjectKorra",
    ":Auspice:service:ServiceIO",
    ":Auspice:service:SimplePets",
    ":Auspice:service:SkinsRestorer",
    ":Auspice:service:SkinsRestorer-api",
    ":Auspice:service:SkinsRestorer:bukkit",
    ":Auspice:service:SkinsRestorer:bungee",
    ":Auspice:service:SkinsRestorer:velocity",
    ":Auspice:service:Vault",
    ":Auspice:service:WorldEdit",

    )

include(
    ":HiraethRPG",
    ":HiraethRPG:api",

    ":HiraethRPG:game",
    ":HiraethRPG:game:api",

    ":HiraethRPG:game:bukkit",
    ":HiraethRPG:game:bukkit:api",

    ":HiraethRPG:game:bukkit:paper",
    ":HiraethRPG:game:bukkit:folia",


    ":HiraethRPG:proxy",
    ":HiraethRPG:proxy:api",
    )

include(
    ":KingdomsAddons:Auspice",
    ":KingdomsAddons:Civilizations",
    ":KingdomsAddons:PlaceholderAPI-Bridge",
    ":KingdomsAddons:Powerful-Territory",
    ":KingdomsAddons:Props",
    ":KingdomsAddons:Trade-Point",

    ":KingdomsAddons:kingdoms",
    ":KingdomsAddons:kingdoms:Peace-Treaties",
    ":KingdomsAddons:kingdoms:Outposts",
    ":KingdomsAddons:kingdoms:EngineHub",
    ":KingdomsAddons:kingdoms:EngineHub:commons",
    ":KingdomsAddons:kingdoms:EngineHub:worldguard",
    ":KingdomsAddons:kingdoms:EngineHub:worldguard:v6",
    ":KingdomsAddons:kingdoms:EngineHub:worldguard:v7",
    )

include(
    ":WandsCraftsmanship"
)

includeBuild("gradle-plugin") {
  dependencySubstitution {
  }
}

includeBuild("common") {
  dependencySubstitution {
    substitute(module("net.aurika:common-annotation")).using(project(":annotation"))
    substitute(module("net.aurika:common-config")).using(project(":config"))
    substitute(module("net.aurika:common-config-api")).using(project(":config:config-api"))
    substitute(module("net.aurika:common-config-json")).using(project(":config:config-json"))
    substitute(module("net.aurika:common-config-yaml")).using(project(":config:config-yaml"))
    substitute(module("net.aurika:common-data-api")).using(project(":data-api"))
    substitute(module("net.aurika:common-dependency")).using(project(":dependency"))
    substitute(module("net.aurika:common-examinable-api")).using(project(":examinable-api"))
    substitute(module("net.aurika:common-function")).using(project(":function"))
    substitute(module("net.aurika:common-key")).using(project(":key"))
    substitute(module("net.aurika:common-logging")).using(project(":logging"))
    substitute(module("net.aurika:common-nbt")).using(project(":nbt"))
    substitute(module("net.aurika:common-property")).using(project(":property"))
    substitute(module("net.aurika:common-scheduler")).using(project(":scheduler"))
    substitute(module("net.aurika:common-snakeyaml")).using(project(":snakeyaml"))
    substitute(module("net.aurika:common-task")).using(project(":task"))

    substitute(module("net.aurika:common-util-cache")).using(project(":util:cache"))
    substitute(module("net.aurika:common-util-collection")).using(project(":util:collection"))
    substitute(module("net.aurika:common-util-enumeration")).using(project(":util:enumeration"))
    substitute(module("net.aurika:common-util-file")).using(project(":util:file"))
    substitute(module("net.aurika:common-util-functional")).using(project(":util:functional"))
    substitute(module("net.aurika:common-util-generic")).using(project(":util:generic"))
    substitute(module("net.aurika:common-util-gson")).using(project(":util:gson"))
    substitute(module("net.aurika:common-util-math")).using(project(":util:math"))
    substitute(module("net.aurika:common-util-number")).using(project(":util:number"))
    substitute(module("net.aurika:common-util-reflection")).using(project(":util:reflection"))
    substitute(module("net.aurika:common-util-registry")).using(project(":util:registry"))
    substitute(module("net.aurika:common-util-stacktrace")).using(project(":util:stacktrace"))
    substitute(module("net.aurika:common-util-string")).using(project(":util:string"))
    substitute(module("net.aurika:common-util-uuid")).using(project(":util:uuid"))

    substitute(module("net.aurika:common-validate")).using(project(":validate"))
  }
}

includeBuild("kingdoms") {
  dependencySubstitution {
    substitute(module("net.aurika:kingdoms-addon-auspice")).using(project(":Auspice"))
    substitute(module("net.aurika:kingdoms-addon-powerful-territory")).using(project(":Powerful-Territory"))
  }
}

public static void addProjectAccesses(ConfigurableIncludedBuild includedBuild) {
  String name = includedBuild.name
  includedBuild.dependencySubstitution {
    substitute(module("net.aurika." + name))
  }
}
