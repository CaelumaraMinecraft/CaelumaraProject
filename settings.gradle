import org.gradle.api.initialization.resolve.RepositoriesMode

pluginManagement {
  repositories {
    mavenCentral()
    mavenLocal()
    gradlePluginPortal()

    maven {
      name = "FabricMC"
      url = "https://maven.fabricmc.net/"
    }

    maven {
      name = "nms-repo"
      url = "https://repo.codemc.org/repository/nms/"
    }

    maven {
      name = "minecraft-repo"
      url = "https://libraries.minecraft.net/"
    }

    maven {
      name = "spigotmc-repo"
      url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }

    maven {
      name = "sk89q-repo"
      url = "https://maven.enginehub.org/repo/"
    }

    maven {
      name = "placeholderapi"
      url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }

    maven {
      name = "Lumine"
      url = "https://mvn.lumine.io/repository/maven-public/"
    }

    maven {
      name = "MVdW-public"
      url = "https://repo.mvdw-software.be/content/groups/public/"
    }

    maven {
      name = "jitpack.io"
      url = "https://jitpack.io/"
    }

    maven {
      name = "Scarsz-Nexus"
      url = "https://nexus.scarsz.me/content/groups/public/"
    }

    maven {
      name = ("dynmap")
      url = ("https://repo.mikeprimm.com/")
    }

    maven {
      name = ("sonatype")
      url = ("https://oss.sonatype.org/content/groups/public/")
    }
    maven {
      name = ("essentials")
      url = ("https://repo.essentialsx.net/releases/")
    }
    maven { url = "https://repo.rosewooddev.io/repository/public/" }
    maven { url = "https://repo.auxilor.io/repository/maven-public/" }
    maven { url = "https://repo.papermc.io/repository/maven-public/" }
    maven {
      url = ("https://jitpack.io")
      content {
        includeGroupByRegex("com\\.github\\..*")
      }
    }

    maven { url = "https://repo.auxilor.io/repository/maven-public/" }
    maven { url = "https://repo.papermc.io/repository/maven-public/" }

    maven {
      name = "ossrh"
      url = "https://oss.sonatype.org/content/repositories/snapshots"
    }

    maven {
      name = "ossrh"
      url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
    }

    maven {
      name = "papermc-repo"
      url = "https://repo.papermc.io/repository/maven-public/"
    }

    maven {
      name = "sonatype"
      url = "https://oss.sonatype.org/content/groups/public/"
    }
  }
}

dependencyResolutionManagement {
  repositoriesMode = RepositoriesMode.PREFER_PROJECT
}

rootProject.name = "Aurika"

include(
    ":ecliptor",
    ":ecliptor:annotations",
    ":ecliptor:data-api",
    ":ecliptor:data-storage"
)

include(
    ":aurika",
)

//include(
//    ":HiraethRPG",
//    ":HiraethRPG:api",
//
//    ":HiraethRPG:game",
//    ":HiraethRPG:game:api",
//
//    ":HiraethRPG:game:bukkit",
//    ":HiraethRPG:game:bukkit:api",
//
//    ":HiraethRPG:game:bukkit:paper",
//    ":HiraethRPG:game:bukkit:folia",
//
//
//    ":HiraethRPG:proxy",
//    ":HiraethRPG:proxy:api",
//    )

//include(
//    ":KingdomsAddons:Civilizations",
//    ":KingdomsAddons:PlaceholderAPI-Bridge",
//    ":KingdomsAddons:Props",
//
//    ":KingdomsAddons:kingdoms",
//    ":KingdomsAddons:kingdoms:Peace-Treaties",
//    ":KingdomsAddons:kingdoms:Outposts",
//    ":KingdomsAddons:kingdoms:EngineHub",
//    ":KingdomsAddons:kingdoms:EngineHub:commons",
//    ":KingdomsAddons:kingdoms:EngineHub:worldguard",
//    ":KingdomsAddons:kingdoms:EngineHub:worldguard:v6",
//    ":KingdomsAddons:kingdoms:EngineHub:worldguard:v7"
//)

//include(
//    ":WandsCraftsmanship"
//)


includeBuild("auspice") {
  dependencySubstitution {
    substitute(module("net.aurika:auspice-api")).using(project(":api"))

    substitute(module("net.aurika:auspice-client-api")).using(project(":client-api"))

    substitute(module("net.aurika:auspice-proxy-api")).using(project(":proxy-api"))

    substitute(module("net.aurika:auspice-server-api")).using(project(":server-api"))
    substitute(module("net.aurika:auspice-bukkit-api")).using(project(":bukkit-api"))
    substitute(module("net.aurika:auspice-paper-api")).using(project(":paper-api"))
    substitute(module("net.aurika:auspice-folia-api")).using(project(":folia-api"))

    substitute(module("net.aurika:auspice-platform-api")).using(project(":platform:platform-api"))

    substitute(module("net.aurika:auspice-nms-1_21_4")).using(project(":nms:nms-1_21_4"))

    substitute(module("net.aurika:auspice-service-api")).using(project(":service:service-api"))

  }
}

includeBuild("caeron") {
  dependencySubstitution {
    substitute(module("net.aurika:caeron-api")).using(project(":api"))
  }
}

includeBuild("common") {
  dependencySubstitution {
    substitute(module("net.aurika:common-annotation")).using(project(":annotation"))
    substitute(module("net.aurika:common-data-api")).using(project(":data-api"))
    substitute(module("net.aurika:common-dependency")).using(project(":dependency"))
    substitute(module("net.aurika:common-event-api")).using(project(":event:event-api"))
    substitute(module("net.aurika:common-examinable-api")).using(project(":examinable-api"))
    substitute(module("net.aurika:common-function")).using(project(":function"))
    substitute(module("net.aurika:common-key")).using(project(":key"))
    substitute(module("net.aurika:common-keyed-api")).using(project(":keyed-api"))
    substitute(module("net.aurika:common-lazy")).using(project(":lazy"))
    substitute(module("net.aurika:common-logging")).using(project(":logging"))
    substitute(module("net.aurika:common-metadata")).using(project(":metadata"))
    substitute(module("net.aurika:common-nbt")).using(project(":nbt"))
    substitute(module("net.aurika:common-property")).using(project(":property"))
    substitute(module("net.aurika:common-scheduler")).using(project(":scheduler"))
    substitute(module("net.aurika:common-snakeyaml")).using(project(":snakeyaml"))
    substitute(module("net.aurika:common-sorting-api")).using(project(":sorting-api"))
    substitute(module("net.aurika:common-sorting-key")).using(project(":sorting-key"))
    substitute(module("net.aurika:common-task")).using(project(":task"))

    substitute(module("net.aurika:common-util-cache")).using(project(":util:cache"))
    substitute(module("net.aurika:common-util-collection")).using(project(":util:collection"))
    substitute(module("net.aurika:common-util-empty")).using(project(":util:empty"))
    substitute(module("net.aurika:common-util-enumeration")).using(project(":util:enumeration"))
    substitute(module("net.aurika:common-util-file")).using(project(":util:file"))
    substitute(module("net.aurika:common-util-functional")).using(project(":util:functional"))
    substitute(module("net.aurika:common-util-generic")).using(project(":util:generic"))
    substitute(module("net.aurika:common-util-gson")).using(project(":util:gson"))
    substitute(module("net.aurika:common-util-math")).using(project(":util:math"))
    substitute(module("net.aurika:common-util-number")).using(project(":util:number"))
    substitute(module("net.aurika:common-util-reflection")).using(project(":util:reflection"))
    substitute(module("net.aurika:common-util-registry")).using(project(":util:registry"))
    substitute(module("net.aurika:common-util-stacktrace")).using(project(":util:stacktrace"))
    substitute(module("net.aurika:common-util-string")).using(project(":util:string"))
    substitute(module("net.aurika:common-util-string-split")).using(project(":util:string:split"))
    substitute(module("net.aurika:common-util-uuid")).using(project(":util:uuid"))

    substitute(module("net.aurika:common-validate")).using(project(":validate"))
  }
}

includeBuild("configuration") {
  dependencySubstitution {
    substitute(module("net.aurika:configuration-api")).using(project(":api"))
    substitute(module("net.aurika:configuration-json")).using(project(":json"))
    substitute(module("net.aurika:configuration-yaml")).using(project(":yaml"))
    substitute(module("net.aurika:configuration-util-accessor")).using(project(":util:accessor"))
  }
}

includeBuild("dyanasis") {
  dependencySubstitution {
    substitute(module("net.aurika:dyanasis-api")).using(project(":api"))
    substitute(module("net.aurika:dyanasis-editor-api")).using(project(":editor-api"))
    substitute(module("net.aurika:dyanasis-editor-app")).using(project(":editor-app"))
    substitute(module("net.aurika:dyanasis-editor-intellij")).using(project(":editor-intellij"))
  }
}

includeBuild("hiraeth-rpg") {
  dependencySubstitution {
    substitute(module("net.aurika:hiraeth-api")).using(project(":api"))
    substitute(module("net.aurika:hiraeth-server-api")).using(project(":server-api"))
    substitute(module("net.aurika:hiraeth-bukkit-api")).using(project(":bukkit-api"))
    substitute(module("net.aurika:hiraeth-proxy-api")).using(project(":proxy-api"))
  }
}

includeBuild("kingdoms") {
  dependencySubstitution {
    substitute(module("net.aurika:kingdoms-addon-auspice")).using(project(":auspice"))
    substitute(module("net.aurika:kingdoms-addon-civilizations")).using(project(":civilizations"))
    substitute(module("net.aurika:kingdoms-addon-powerful-territory")).using(project(":powerful-territory"))
    substitute(module("net.aurika:kingdoms-addon-props")).using(project(":props"))
    substitute(module("net.aurika:kingdoms-addon-supreme-kingdom")).using(project(":supreme-kingdom"))
    substitute(module("net.aurika:kingdoms-addon-trade-point")).using(project(":trade-point"))
  }
}

includeBuild("xariaz") {
  dependencySubstitution {
    substitute(module("net.aurika:xariaz-api")).using(project(":api"))
    substitute(module("net.aurika:xariaz-yaml")).using(project(":yaml"))
  }
}

includeBuild("gradle-plugin") {
  dependencySubstitution {
//    substitute(module("net.aurika:repository-gradle-plugin"))
  }
}
