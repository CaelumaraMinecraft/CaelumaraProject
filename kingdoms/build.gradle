plugins {
  id("java-library")
  id("net.aurika.gradle.dependency")
  id("net.aurika.gradle.kingdoms")
  id("net.aurika.gradle.repository")
  alias(libs.plugins.kotlin) apply false
  alias(libs.plugins.shadow) apply false
}

group = "net.aurika.kingdoms"

int targetJavaVersion = 21

subprojects {

  apply {
    plugins.apply("java-library")
    plugins.apply("net.aurika.gradle.dependency")
    plugins.apply("net.aurika.gradle.kingdoms")
    plugins.apply("net.aurika.gradle.repository")
    plugins.apply(libs.plugins.kotlin.get().pluginId)
    plugins.apply(libs.plugins.shadow.get().pluginId)
  }

  repositories {

    mavenCentral()
    mavenLocal()
    gradlePluginPortal()

    aurikaRepos {
      spigotMC {
        snapshots()
        releases()
      }
    }

    maven {
      name = "nostal-snapshots"
      url = "https://maven.nostal.ink/repository/maven-snapshots/"
    }

    maven {
      name = "sonatype"
      url = "https://oss.sonatype.org/content/groups/public/"
    }

    maven {
      name = "rosewood-dev"
      url = "https://repo.rosewooddev.io/repository/public/"
    }

    maven {
      name = "nms-repo"
      url = "https://repo.codemc.org/repository/nms/"
    }

    maven {
      name = "jitpack-io"
      url = "https://jitpack.io"
      content {
        includeGroupByRegex("com\\.github\\..*")
      }
    }

  }

  dependencies {
    compileOnly(libs.server.spigot)
    compileOnly(libs.annotations.checker)
    compileOnly(libs.xseries)
  }

  build {
    dependsOn(shadowJar)
  }

  compileKotlin {
    kotlinOptions {
      jvmTarget = targetJavaVersion
    }
  }

  jar {
    enabled = false
  }

  java {
    withSourcesJar()
    JavaVersion javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
      toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
  }

}
